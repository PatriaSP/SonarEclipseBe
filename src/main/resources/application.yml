server:
  port: ${APP_PORT}

springdoc:
  api-docs:
    enabled: true
    groups:
      enabled: false
    path: /v1/docs
  swagger-ui:
    enabled: true
    path: /v1/
    persist-authorization: true
    operations-sorter: method
    tags-sorter: alpha
    filter: true
    syntax-highlight:
      theme: monokai
    doc-expansion: none
    layout: BaseLayout

spring:
  servlet:
    multipart:
      enabled: true
      file-size-threshold: 2MB
      max-file-size: ${APP_MAX_FILE_SIZE}
      max-request-size: ${APP_MAX_REQUEST_SIZE}
  mvc:
    static-path-pattern: /static/**
    throwExceptionIfNoHandlerFound: true
  datasource:
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
    username: ${DB_USERNAME}
    driver-class-name: org.postgresql.Driver
    password: ${DB_PASSWORD}
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      minimum-idle: 5
      maximum-pool-size: 10
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        show_sql: false
        format_sql: true
        jdbc:
          batch_size: 30
        order_inserts: true
        order_updates: true    
  flyway:
    locations: "db/migration,classpath:db/seeder"
    validate-migration-naming: true
    table: migrations
    outOfOrder: false
    baseline-on-migrate: true
  dotenv:
    path: ${DOTENV_PATH:.env}
    failOnMissing: true
  kafka:
    bootstrap-servers: ${KAFKA_SERVER}
    listener:
      auto-startup: true
    consumer:
      group-id: ${KAFKA_GROUP}
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

minio:
  url: ${MINIO_URL}
  username: ${MINIO_USERNAME}
  password: ${MINIO_PASSWORD}
  bucket: ${MINIO_BUCKET}
  part-size: ${MINIO_PART_SIZE:5242880} # value in bytes (minimum is 5 MB equivalent)

jwt:
  secret: ${APP_JWT_SECRET}
  issuer: ${APP_JWT_ISSUER}
  audience: ${APP_JWT_AUDIENCE}